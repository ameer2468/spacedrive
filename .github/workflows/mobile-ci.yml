name: Mobile CI

on:
  pull_request:
  push:
    branches:
      - main
    paths-ignore:
      - '**/.md'
  workflow_dispatch:

env:
  SPACEDRIVE_CUSTOM_APT_FLAGS: --no-install-recommends

jobs:
  android:
    name: Build Android
    runs-on: macos-12
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install pnpm
        uses: pnpm/action-setup@v2.2.2
        with:
          version: 7.x.x

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'pnpm'

      - name: Install Rust stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal

      - name: Cache Rust deps
        uses: Swatinem/rust-cache@v2
        with:
          save-if: ${{ inputs.save-cache }} == "true"

      - name: Run 'setup-system.sh' script
        shell: bash
        run: ./.github/scripts/setup-system.sh mobile

      - name: Generate Prisma client
        uses: ./.github/actions/generate-prisma-client

      - name: Install pnpm dependencies
        run: pnpm i --frozen-lockfile

      - name: Setup Java JDK
        uses: actions/setup-java@v3.10.0
        with:
          java-version: '18'
          distribution: 'temurin'

      - name: Setup Android SDK Tools
        uses: android-actions/setup-android@v2.0.2

      - name: Cache NDK
        uses: actions/cache@v3
        with:
          path: ${{ env.ANDROID_HOME }}/ndk/23.1.7779620
          key: ndk-23.1.7779620

      - name: Install NDK
        run: echo "y" | sudo ${ANDROID_HOME}/cmdline-tools/latest/bin/sdkmanager --install "ndk;23.1.7779620"

      - name: Cache Gradle
        uses: gradle/gradle-build-action@v2

      - name: Build Android
        working-directory: ./apps/mobile/android
        run: chmod +x ./gradlew && ./gradlew assembleRelease -PreactNativeArchitectures=arm64 --no-daemon

      - name: Cache AVD
        uses: actions/cache@v3
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-33

      - name: Generate AVD Snapshot
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          arch: arm64-v8a
          api-level: 33
          ndk: 23.1.7779620
          cmake: 3.22.1
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: false
          script: echo "Generated AVD snapshot"

      - name: Install Maestro
        run: curl -Ls "https://get.maestro.mobile.dev" | bash

      - name: Run Tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          arch: arm64-v8a
          api-level: 33
          ndk: 23.1.7779620
          cmake: 3.22.1
          force-avd-creation: false
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          script: |
            adb install -r apps/mobile/android/app/build/outputs/apk/release/app-release.apk
            adb wait-for-device
            maestro test apps/mobile/tests/onboarding.yaml

  ios:
    name: Build iOS
    runs-on: macos-12
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Xcode
        uses: maxim-lobanov/setup-xcode@v1.5.1
        with:
          xcode-version: latest-stable

      - name: Install pnpm
        uses: pnpm/action-setup@v2.2.2
        with:
          version: 7.x.x

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'pnpm'

      - name: Install Rust stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal

      - name: Cache Rust deps
        uses: Swatinem/rust-cache@v2
        with:
          save-if: ${{ inputs.save-cache }} == "true"

      - name: Run 'setup-system.sh' script
        shell: bash
        run: ./.github/scripts/setup-system.sh mobile

      - name: Generate Prisma client
        uses: ./.github/actions/generate-prisma-client

      - name: Install pnpm dependencies
        run: pnpm i --frozen-lockfile

      - name: Cache Pods
        uses: actions/cache@v3
        with:
          path: |
            ./apps/mobile/ios/Pods
            ~/Library/Caches/CocoaPods
            ~/.cocoapods
          key: pods-${{ hashFiles('./apps/mobile/ios/Podfile.lock') }}
          restore-keys: pods-

      - name: Install Pods
        working-directory: ./apps/mobile/ios
        run: pod install --repo-update

      - name: Build iOS
        working-directory: ./apps/mobile/ios
        run: xcodebuild -workspace ./Spacedrive.xcworkspace -scheme Spacedrive -destination 'platform=iOS Simulator,name=iPhone 11' -derivedDataPath build

      - name: Test iOS
        uses: mobile-dev-inc/action-maestro-cloud@v1.2.3
        with:
          api-key: ${{ secrets.MAESTRO_CLOUD_API_KEY }}
          app-file: apps/mobile/ios/build/Build/Products/Debug-iphonesimulator/Spacedrive.app
          mapping-file: apps/mobile/ios/build/Build/Products/Debug-iphonesimulator/Spacedrive.app.dSYM
          workspace: apps/mobile/tests

      # TODO: IOS Simulator on Github Actions..
