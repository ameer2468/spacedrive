name: Mobile CI

on:
  pull_request:
  push:
    branches:
      - main
    paths-ignore:
      - '**/.md'
  workflow_dispatch:

env:
  SPACEDRIVE_CUSTOM_APT_FLAGS: --no-install-recommends

jobs:
  android:
    name: Build Android
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install pnpm
        uses: pnpm/action-setup@v2.2.2
        with:
          version: 7.x.x

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'pnpm'

      - name: Install Rust stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal

      - name: Cache Rust deps
        uses: Swatinem/rust-cache@v2
        with:
          save-if: ${{ inputs.save-cache }} == "true"

      - name: Run 'setup-system.sh' script
        shell: bash
        run: ./.github/scripts/setup-system.sh mobile

      - name: Generate Prisma client
        uses: ./.github/actions/generate-prisma-client

      - name: Install pnpm dependencies
        run: pnpm i --frozen-lockfile

      - name: Setup Java JDK
        uses: actions/setup-java@v3.10.0
        with:
          java-version: '18'
          distribution: 'temurin'

      - name: Setup Android SDK Tools
        uses: android-actions/setup-android@v2.0.2

      - name: Install NDK
        run: echo "y" | sudo ${ANDROID_HOME}/tools/bin/sdkmanager --install "ndk;23.1.7779620" --sdk_root=${ANDROID_SDK_ROOT}

      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Make Gradlew Executable
        working-directory: ./apps/mobile/android
        run: chmod +x ./gradlew

      - name: Build Android App APK
        working-directory: ./apps/mobile/android
        run: ./gradlew assembleRelease --no-daemon

      # TODO: For releasing, bundle is better, will probably have a separate pipeline for that, keeping this here as a reference
      # - name: Sign App Bundle
      #   id: sign_app
      #   uses: r0adkll/sign-android-release@v1
      #   with:
      #     releaseDirectory: android/app/build/outputs/bundle/release
      #     signingKeyBase64: ${{ secrets.ANDROID_SIGNING_KEY }}
      #     alias: ${{ secrets.ANDROID_SIGNING_ALIAS }}
      #     keyStorePassword: ${{ secrets.ANDROID_SIGNING_STORE_PASSWORD }}
      #     keyPassword: ${{ secrets.ANDROID_SIGNING_KEY_PASSWORD }}

      - name: Upload Android APK
        uses: actions/upload-artifact@v2
        with:
          name: Spacedrive.apk
          path: apps/mobile/android/app/build/outputs/apk/release/app-release.apk

      # TODO: test it

  # ios:
  #   name: Build iOS
  #   runs-on: macos-12
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v3

  #     - name: Install pnpm
  #       uses: pnpm/action-setup@v2.2.2
  #       with:
  #         version: 7.x.x

  #     - name: Install Node.js
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: 18
  #         cache: 'pnpm'

  #     - name: Install Rust stable
  #       uses: actions-rs/toolchain@v1
  #       with:
  #         toolchain: stable
  #         profile: minimal

  #     - name: Cache Rust deps
  #       uses: Swatinem/rust-cache@v2
  #       with:
  #         save-if: ${{ inputs.save-cache }} == "true"

  #     - name: Run 'setup-system.sh' script
  #       shell: bash
  #       run: ./.github/scripts/setup-system.sh mobile

  #     - name: Generate Prisma client
  #       uses: ./.github/actions/generate-prisma-client

  #     - name: Install pnpm dependencies
  #       run: pnpm i --frozen-lockfile

  #     - name: Setup Ruby
  #       uses: ruby/setup-ruby@v1
  #       with:
  #         ruby-version: 3.1.3
  #         bundler-cache: true

  #     - name: Cache Pods
  #       uses: actions/cache@v3
  #       with:
  #         path: |
  #           ios/Pods
  #           ~/Library/Caches/CocoaPods
  #           ~/.cocoapods
  #         key: ${{ runner.os }}-pods-${{ hashFiles('ios/Podfile.lock') }}
  #         restore-keys: |
  #           ${{ runner.os }}-pods-

  #     - name: Install Pods
  #       working-directory: ./apps/mobile/ios
  #       run: pod install --repo-update

  #     - name: Build IOS App
  #       uses: yukiarrr/ios-build-action@v1.4.0
  #       with:
  #         project-path: ios/Spacedrive.xcodeproj
  #         p12-base64: ${{ secrets.IOS_P12_BASE64 }}
  #         mobileprovision-base64: ${{ secrets.IOS_MOBILE_PROVISION_BASE64 }}
  #         code-signing-identity: 'iPhone Distribution'
  #         team-id: ${{ secrets.IOS_TEAM_ID }}
  #         certificate-password: ${{ secrets.IOS_CERTIFICATE_PASSWORD }}
  #         workspace-path: ios/Spacedrive.xcworkspace
  #         scheme: Spacedrive

  #     - name: Upload iOS App
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: Spacedrive.app
  #         path: apps/mobile/ios/build/Release-iphoneos/Spacedrive.app
